function slog(a){console.log(a)}!function(a){"use strict"; a.AcritBonusIntegration || (a.AcritBonusIntegration = function(a){"object" == typeof a && (this.Params = a, this.elementcount = 0, this.elementID = 0), slog("window.AcritBonusIntegration"), null != typeof productId && this.DetailElement(), this.PersonalPage(), this.BasketAllBonus(), BX.Sale && this.SOAAjax(), BX.addCustomEvent("OnBasketChange", BX.proxy(this.BasketAllBonus, this)), BX.addCustomEvent("onCatalogElementChangeOffer", BX.proxy(this.DetailElement, this)), BX.addCustomEvent("ChangeQuantity", BX.proxy(this.ChangeQuantity, this)), BX.addCustomEvent("onAjaxSuccess", BX.proxy(this.SOAAjax, this))}, a.AcritBonusIntegration.prototype.UpdateBonus = function(){}, a.AcritBonusIntegration.prototype = {ErrorNotFoundClass:function(a, e, t = !1){0 != t?console.log("acrit.bonus error: Block [" + t + "] not found class[" + a + "] in id[" + e + "]"):console.log("acrit.bonus error: not found class[" + a + "] in id[" + e + "]")}, ErrorNotFoundId:function(a, e = !1){0 != e?console.error("acrit.bonus error: Block [" + e + "] not found id[" + a + "]"):console.error("acrit.bonus error: not found id[" + a + "]")}, PersonalPage:function(){var a = this.Params.PERSONAL; if (null != a.ON && a.ON){if (null != a.BALANCE){if (!BX(a.BLOCK_ID))return void this.ErrorNotFoundId(a.BLOCK_ID); var e = BX.findChild(BX(a.BLOCK_ID), {tag:"div", class:a.BLOCK_CLASS}, !0); if (!e)return void this.ErrorNotFoundClass(a.BLOCK_CLASS, a.BLOCK_ID, "Personal page"); var t = BX.create("DIV", {props:{className:"acrit-bonus-personal-balance"}, html:a.BALANCE_TEXT + " " + a.BALANCE}); e && BX.prepend(t, e)}if (null != a.ORDERS){var s = BX.findChild(BX(a.BLOCK_ID), {class:"sale-order-list-about-link"}, !0, !0), r = "", n = ""; s.forEach(function(e){if (r = e.getAttribute("href"), n = r.replace("/personal/orders/", ""), null != a.ORDERS[n]){var t = BX.create("DIV", {props:{className:"acrit-bonus-personal-order-bonus"}, html:a.ORDERS_TEXT + " " + a.ORDERS[n]}); BX.insertAfter(t, e)}})}}}, BasketAllBonus:function(){if (BX.Sale && BX.Sale.BasketComponent && (!BX.Sale.BasketComponent.result.GRID.ROWS && BX.Sale.BasketComponent.result.BASKET_ITEM_RENDER_DATA && (BX.Sale.BasketComponent.result.GRID.ROWS = BX.Sale.BasketComponent.result.BASKET_ITEM_RENDER_DATA), BX.Sale.BasketComponent.result.GRID.ROWS)){var a = {ACTION:"BASKET", AJAX:"Y", SITE_ID:this.Params.SITE_ID, TYPE:"CART", ENDTOEND:"Y", COUNTS:1}, e = this; if (1 == this.Params.CART.ON){if (!document.getElementById("bonus_all")){var t = BX.findChild(BX(e.Params.CART.MAIN_BLOCK), {tag:"div", class:e.Params.CART.OUT_BLOCK}, !0), s = BX.create("DIV", {props:{id:"bonus_all"}}); t?t.appendChild(s):this.ErrorNotFoundClass(e.Params.CART.OUT_BLOCK, e.Params.CART.MAIN_BLOCK, "BASKET")}BX.ajax({url:this.Params.CART.PATH, data:a, method:"POST", dataType:"json", timeout:30, async:!0, processData:!0, scriptsRunFirst:!0, emulateOnload:!0, start:!0, cache:!1, onsuccess:function(a){if (null != a.ALLBONUS && "" != a.ALLBONUS)if (document.getElementById("bonus_all"))BX.adjust(BX("bonus_all"), {html:e.Params.CART.LANG_BONUS + " " + a.ALLBONUS});  else{var t = BX.findChild(BX(e.Params.CART.MAIN_BLOCK), {tag:"div", class:e.Params.CART.OUT_BLOCK}, !0), s = BX.create("DIV", {props:{id:"bonus_all"}, html:e.Params.CART.LANG_BONUS + " " + a.ALLBONUS}); t.appendChild(s)} else BX.remove(BX("bonus_all")); if (1 == e.Params.CART.BONUS_OFFER)for (var r in a.ITEMS){var n = a.ITEMS[r], o = BX("basket-item-" + n.ID), i = BX.findChild(o, {tag:"div", class:"basket-item-block-price"}, !0, !0)[1], l = BX.create("DIV", {props:{id:"bonus_item_" + n.ID, className:"bonus bonus_item_cart"}, html:e.Params.CART.OFFER_LANG_BONUS + " " + n.BONUS}); BX.remove(BX("bonus_item_" + n.ID)), parseFloat(n.BONUS) > 0 && i.appendChild(l)}if (1 == e.Params.CARTBONUSPAY.ON){var B = BX.findChild(BX(e.Params.CARTBONUSPAY.MAIN_BLOCK), {tag:"div", class:e.Params.CARTBONUSPAY.OUT_BLOCK}, !0), c = BX.create("DIV", {props:{id:"bonuspay"}, html:"bonuspay for cart (test) !!!not use!!!"}); B.appendChild(c)}}, onfailure:function(){}})}}}, SOAAjax:function(){BX.Sale && null != BX.Sale.OrderAjaxComponent && this.payBonusElement(BX.Sale.OrderAjaxComponent.result)}, payBonusElement:function(a){if (null != a){if (BX.remove(BX("bonus_order")), BX.remove(BX("bonus_pay")), this.Params.SOA.MAIN_BLOCK){var e = BX.findChild(BX(this.Params.SOA.MAIN_BLOCK), {tag:"div", class:this.Params.SOA.OUT_BLOCK}, !0, !0); if (e instanceof Array){var t = parseInt(e.length); t > 2 && (t -= 2), t < 0 && (t = 0)}if (parseFloat(a.TOTAL.BONUS_PAY_USER_INPUT) > 0){BX.remove(BX("acrit-bonus-total-pay-by-bonus")); var s = BX.create("DIV", {attrs:{className:"bx-soa-cart-total-line", id:"acrit-bonus-total-pay-by-bonus"}, html:'<div id="acrit-bonus-total-pay-by-bonus-block"><span class="bx-soa-cart-t">' + a.TOTAL.TOTAL_BONUS_PAY_TITLE + '</span><span class="bx-soa-cart-d">' + a.TOTAL.BONUS_PAY_USER_INPUT_FORMAT + "</span></div>"}); e[t] && s && BX.insertAfter(s, e[t])}if (parseFloat(a.TOTAL.BONUS_ORDER) > 0){BX.remove(BX("bonus_order")); var r = BX.create("DIV", {attrs:{className:"bx-soa-cart-total-line", id:"bonus_order"}, html:'<div id="order_bonus"><span class="bx-soa-cart-t">' + this.Params.SOA.LANG_BONUS + '</span><span class="bx-soa-cart-d">' + a.TOTAL.BONUS_ORDER_FORMAT + "</span></div>"}); e[t] && r && BX.insertAfter(r, e[t])}if (parseFloat(a.TOTAL.BONUS_PAY) > 0){BX.remove(BX("bonus_pay")); var n = BX.create("DIV", {attrs:{className:"bx-soa-cart-total-line", id:"bonus_pay"}, html:'<div id="order_bonuspay"><span class="bx-soa-cart-t">' + this.Params.SOA.LANG_BONUSPAY + '</span><span class="bx-soa-cart-d">' + a.TOTAL.BONUS_PAY + "</span></div>"}); e[t] && n && BX.insertAfter(n, e[t])}}if (a.BONUSPAY && 1 == a.BONUSPAY.DISPLAY){var o = BX.create("DIV", {attrs:{id:"acrit-bonus-paysystem", className:"bx-soa-section"}}), i = BX.create("DIV", {attrs:{className:"bx-soa-section-title-container"}, html:'<h2 class="bx-soa-section-title col-sm-9"><span class="bx-soa-section-title-count"></span>' + a.BONUSPAY.NAME + "</h2>"}), l = BX.create("DIV", {attrs:{className:"bx-soa-section-content container-fluid"}}), B = BX.create("DIV", {attrs:{className:"bx-soa-pp row"}}), c = BX.create("DIV", {attrs:{className:"col-sm-9 bx-soa-pp-item-container"}}), d = BX.create("DIV", {attrs:{className:"col-sm-2 bx-soa-pp-item-container"}}); o.appendChild(i); var p = BX.create("DIV", {props:{className:"bonus_comment"}, children:[BX.create("strong", {html:this.Params.SOA.INTEGRATION_ORDER_TEXT_IN_YOU_ACCOUNT.replace("#SUMMA#", a.BONUSPAY.CURRENT_BONUS_BUDGET_FORMATED.replace("", " "))})]}), A = BX.create("span", {html:"<br />" + this.Params.SOA.INTEGRATION_ORDER_TXT_YOU_MUST_PAY.replace("#PERCENT#", a.BONUSPAY.ORDER_PAY_PERCENT).replace("#MAXPAY#", a.BONUSPAY.MAXPAY_FORMATTED)}), O = BX.create("DIV", {props:{id:"bonus_payfield_block"}, children:[BX.create("strong", {text:1 == a.BONUSPAY.USER_INPUT?this.Params.SOA.INTEGRATION_ORDER_TXT_HOW_MUCH_BONUS:""})]}), m = BX.create("DIV", {props:{className:"bonus_comment"}, children:[BX.create("strong", {text:this.Params.SOA.ITR_BONUS_NONE_PAYBONUS})]}), u = BX.create("input", {attrs:{type:"text", id:"BONUS_CNT", value:a.BONUSPAY.USER_VALUE, name:"BONUS_CNT", disabled:a.PAY_BONUS_ACCOUNT?"disable":""}, style:{width:"150px"}}); if ("Y" == this.Params.CHECK_SMS.ON)var _ = BX.create("DIV", {props:{id:"sms_payfield_block"}, children:[BX.create("strong", {text:this.Params.CHECK_SMS.SMSTEXT})]}), C = BX.create("input", {attrs:{type:"text", id:"SMSCODE", value:a.SMSCODE?a.SMSCODE:"", name:"SMSCODE", disabled:a.CHECKSMS?"disable":""}, style:{width:"150px"}}), N = BX.create("LABEL", {props:{className:"bxr-subscribe-tab-link bxr-font-color bxr-border-color"}, children:[BX.create("INPUT", {attrs:{type:"checkbox", id:"CHECK_SMS", name:"CHECK_SMS", value:"Y", checked:a.CHECKSMS}, style:{display:"none"}, events:{click:BX.proxy(this.checksms, this)}}), BX.create("SPAN", {text:a.CHECKSMS?this.Params.SOA.ITR_BONUS_TXT_BONUSPAY_CANCEL:this.Params.SOA.ITR_BONUS_TXT_BONUSPAY_OK})], style:{border:"1px solid #e3e6e8", padding:"2px", "margin-left":"10px", cursor:"pointer"}}); var S = BX.create("input", {attrs:{type:"hidden", id:"BONUS_CNT", value:a.BONUSPAY.MAXPAY, name:"BONUS_CNT"}}), h = BX.create("INPUT", {attrs:{type:"hidden", name:"PAY_BONUS_ACCOUNT", value:"N"}}), T = BX.create("LABEL", {props:{className:"bxr-subscribe-tab-link bxr-font-color bxr-border-color"}, children:[BX.create("INPUT", {attrs:{type:"checkbox", id:"PAY_BONUS_ACCOUNT", name:"PAY_BONUS_ACCOUNT", value:"Y", checked:a.PAY_BONUS_ACCOUNT}, style:{display:"none"}, events:{click:BX.proxy(this.selectBonusPaySystem, this)}}), BX.create("SPAN", {text:a.PAY_BONUS_ACCOUNT?this.Params.SOA.PAY_BONUS_APPLY_BUTTON_CANCEL:this.Params.SOA.PAY_BONUS_APPLY_BUTTON_OK})], style:{border:"1px solid #e3e6e8", padding:"2px", "margin-left":"10px", cursor:"pointer"}}), P = BX.create("DIV", {props:{}, children:[BX.create("A", {props:{href:BX.util.htmlspecialchars(this.Params.SOA.INTEGRATION_ORDER_PATH_TO_HELP)}, html:BX.util.htmlspecialchars(this.Params.SOA.ITR_BONUS_TEXT_TO_HELP)})]}), X = BX.create("DIV", {props:{className:"bx-soa-pp-company-image"}}), E = a.BONUSPAY.LOGOTIP_SRC; E && X.setAttribute("style", "background-image: url(" + E + ");background-image: -webkit-image-set(url(" + E + ") 1x, url(" + E + ") 2x)"); var I = BX.create("DIV", {attrs:{className:"bx-soa-pp-company-graf-container"}}); I.appendChild(X), d.appendChild(I), c.appendChild(p), a.BONUSPAY.MAXPAY > 0?(c.appendChild(A), c.appendChild(O), c.appendChild(h), c.appendChild(S), 1 == a.BONUSPAY.USER_INPUT && c.appendChild(u), c.appendChild(T), "Y" == this.Params.CHECK_SMS.ON && a.PAY_BONUS_ACCOUNT && (c.appendChild(_), c.appendChild(C), c.appendChild(N))):c.appendChild(m), c.appendChild(P); BX.findChild(BX(this.Params.SOA.BONUSPAY_MAIN_BLOCK), {tag:"div", class:this.Params.SOA.BONUSPAY_OUT_BLOCK}, !0); BX.remove(BX("acrit-bonus-paysystem")), B.appendChild(d), B.appendChild(c), l.appendChild(B), o.appendChild(l), BX.insertAfter(o, BX(this.Params.SOA.BONUSPAY_MAIN_BLOCK))} else BX.remove(BX("acrit-bonus-paysystem"))}}, checksms:function(){BX.Sale.OrderAjaxComponent.sendRequest()}, selectBonusPaySystem:function(){BX.Sale.OrderAjaxComponent.sendRequest()}, DetailElement:function(a, e){a && (this.elementID = a.newId, this.ElementBonus())}, ChangeQuantity:function(a){this.elementID = a.newId, this.elementcount = a.Qua, this.ElementBonus()}, ElementBonus:function(){if (slog("ElementBonus"), 1 == this.Params.DETAIL.ON){var a = {AJAX:"Y", SITE_ID:this.Params.SITE_ID, PRODUCT_ID:this.elementID, COUNTS:this.elementcount}, e = this, t = null != this.productPageElementId && this.productPageElementId == this.elementID, s = null != this.productPageElementCount && this.productPageElementCount == this.elementcount; if (t && s)return void slog("double"); this.timestamp = Date.now(), this.productPageElementId = this.elementID, this.productPageElementCount = this.elementcount, BX.ajax({url:this.Params.DETAIL.PATH, data:a, method:"POST", dataType:"html", timeout:30, async:!0, processData:!0, scriptsRunFirst:!0, emulateOnload:!0, start:!0, cache:!1, onsuccess:function(a){if ("" != a){var t = BX.findChild(BX(e.Params.DETAIL.MAIN_BLOCK), {tag:"div", class:e.Params.DETAIL.OUT_BLOCK}, !0); if (t || (BX(e.Params.DETAIL.MAIN_BLOCK)?this.ErrorNotFoundClass(e.Params.DETAIL.MAIN_BLOCK, e.Params.DETAIL.OUT_BLOCK, "PRODUCT PAGE"):this.ErrorNotFoundId(e.Params.DETAIL.MAIN_BLOCK)), "" == e.Params.DETAIL.COMP_TEMPLATE)var s = BX.create("DIV", {props:{id:"bonus_all"}, html:e.Params.DETAIL.LANG_BONUS + " " + a});  else s = BX.create("DIV", {props:{id:"bonus_all"}, html:a}); BX.remove(BX("bonus_all")), t.appendChild(s)}}, onfailure:function(){}})}}})}(window);